{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_DS1_v2",
            "metadata": {
                "description": "Virtual machine size (has to be at least the size of Standard_A3 to support 2 NICs)"
            }
        },
        "adminUsername": {
            "type": "string",
             "defaultValue": "anudnya",
            "metadata": {
                "description": "Default Admin username"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "defaultValue": "Anudnya@24680",
            "metadata": {
                "description": "Default Admin password"
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "metadata": {
                "description": "Storage Account type for the VM and VM diagnostic storage"
            },
            "allowedValues": [
                "Standard_LRS",
                "Premium_LRS"
            ]
        },
        "baseResourceName": {
            "type": "string",
            "defaultValue": "rswebapp",
            "metadata": {
                "description": "Name of the resource for webapp"
            },
            "maxLength": 15
        },
        "environments": {
            "defaultValue": [
                "Dev",
                "QA",
                "UAT",
                "Preview"
            ],
            "type": "array",
            "metadata": {
                "description": "Array with the names for the environment slots"
            },
            "maxLength": 19
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "vmSize": {
            "defaultValue": "Standard_B2ms",
            "type": "string",
            "metadata": {
                "description": "Size of the virtual machine."
            }
        },
        "applicationGatewaySize": {
            "type": "string",
            "allowedValues": [
              "WAF_v2"
            ],
            "defaultValue": "WAF_v2",
            "metadata": {
              "description": "Specifies the application gateway SKU name."
            }
          },
          "applicationGatewayCapacity": {
            "type": "int",
            "allowedValues": [
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10
            ],
            "defaultValue": 2,
            "metadata": {
              "description": "Specifies the number of the application gateway instances."
            }
          },
          "backendIpAddress1": {
            "type": "string",
            "defaultValue": "10.0.1.10",
            "metadata": {
              "description": "IP Address for Backend Server 1"
            }
          },
          "backendIpAddress2": {
            "type": "string",
            "defaultValue": "10.0.1.11",
            "metadata": {
              "description": "IP Address for Backend Server 2"
            }
          },
          "wafEnabled": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
              "description": "WAF Enabled"
            }
          },
          "wafMode": {
            "type": "string",
            "allowedValues": [
              "Detection",
              "Prevention"
            ],
            "defaultValue": "Detection",
            "metadata": {
              "description": "WAF Mode"
            }
          },
          "wafRuleSetType": {
            "type": "string",
            "allowedValues": [
              "OWASP"
            ],
            "defaultValue": "OWASP",
            "metadata": {
              "description": "WAF Rule Set Type"
            }
          },
          "wafRuleSetVersion": {
            "type": "string",
            "allowedValues": [
              "2.2.9",
              "3.0"
            ],
            "defaultValue": "3.0",
            "metadata": {
              "description": "WAF Rule Set Version"
            }
          }
    },
    "variables": {
        "virtualMachineName1": "pubvm",
        "virtualMachineName2": "advm",
        "virtualMachineName3": "toolvm",
        "nic1": "nic-1",
        "nic2": "nic-2",
        "nic3": "nic-3",
        "virtualNetworkName": "VNETAnudnya",
        "subnet1Name": "subnet-1",
        "subnet2Name": "subnet-2",
        "subnet3Name": "subnet-3",
        "publicIPAddress": "publicIp",
        "subnet1Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet1Name'))]",
        "subnet2Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet2Name'))]",
        "subnet3Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet3Name'))]",
        "diagStorageAccountName": "[concat('diags',uniqueString(resourceGroup().id))]",
        "networkSecurityGroupName1": "[concat(variables('subnet1Name'), '-nsg')]",
        "networkSecurityGroupName2": "[concat(variables('subnet2Name'), '-nsg')]",
        "networkSecurityGroupName3": "[concat(variables('subnet3Name'), '-nsg')]",
        "standardPlanMaxAdditionalSlots": 4,
        "webAppPortalName": "[concat(parameters('baseResourceName'), 'Portal')]",
        "appServicePlanName": "[concat('AppServicePlan-', parameters('baseResourceName'))]",
        "applicationGatewayName": "applicationGateway1",
        "publicIPAddressName": "publicIpgateway",
        "subnetName": "appGatewaySubnet",
        "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', variables('virtualNetworkName'), variables('subnetName'))]",
        "publicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
        "applicationGatewayID": "[resourceId('Microsoft.Network/applicationGateways', variables('applicationGatewayName'))]"
  
        
    },
    "resources": [
        {            "name": "[variables('virtualMachineName1')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "location": "[parameters('location')]",
            "comments": "This is the virtual machine that you're building.",
            "dependsOn": [
                "[variables('nic1')]",
                "[variables('diagStorageAccountName')]"
            ],
            "properties": {
                "osProfile": {
                    "computerName": "[variables('virtualMachineName1')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "provisionVmAgent": "true"
                    }
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2016-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "properties": {
                                "primary": true
                            },
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic1'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('diagStorageAccountName')), '2017-06-01').primaryEndpoints['blob']]"
                    }
                }
            }
        },
        {            "name": "[variables('virtualMachineName2')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "location": "[parameters('location')]",
            "comments": "This is the virtual machine that you're building.",
            "dependsOn": [
                "[variables('nic1')]",
                "[variables('diagStorageAccountName')]"
            ],
            "properties": {
                "osProfile": {
                    "computerName": "[variables('virtualMachineName2')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "provisionVmAgent": "true"
                    }
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2016-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic2'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('diagStorageAccountName')), '2017-06-01').primaryEndpoints['blob']]"
                    }
                }
            }
        },
        {            "name": "[variables('virtualMachineName3')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "location": "[parameters('location')]",
            "comments": "This is the virtual machine that you're building.",
            "dependsOn": [
                "[variables('nic3')]",
                "[variables('diagStorageAccountName')]"
            ],
            "properties": {
                "osProfile": {
                    "computerName": "[variables('virtualMachineName3')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "provisionVmAgent": "true"
                    }
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2016-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic3'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('diagStorageAccountName')), '2017-06-01').primaryEndpoints['blob']]"
                    }
                }
            }
        },
        {            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('diagStorageAccountName')]",
            "apiVersion": "2017-06-01",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('storageAccountType')]"
            },
            "kind": "Storage",
            "properties": {}
        },
        {   "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-08-01",
            "name": "[variables('networkSecurityGroupName1')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                      "name": "SSH",
                      "properties": {
                        "description": "Allows SSH traffic",
                        "protocol": "Tcp",
                        "sourcePortRange": "*",
                        "destinationPortRange": "22",
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "*",
                        "access": "Allow",
                        "priority": 100,
                        "direction": "Inbound"
                      }
                    }
                  ]
            }
        },
        {   "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-08-01",
            "name": "[variables('networkSecurityGroupName2')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                      "name": "SSH",
                      "properties": {
                        "description": "Allows SSH traffic",
                        "protocol": "Tcp",
                        "sourcePortRange": "192.168.1.0/24",
                        "destinationPortRange": "22",
                        "sourceAddressPrefix": "*",
                        "destinationAddressPrefix": "*",
                        "access": "Allow",
                        "priority": 100,
                        "direction": "Inbound"
                      }
                    }
                  ]
            }
        },
        {       "type": "Microsoft.Network/networkSecurityGroups",
                "apiVersion": "2019-08-01",
                "name": "[variables('networkSecurityGroupName3')]",
                "location": "[parameters('location')]",
                "properties": {
                    "securityRules": [
                        {
                          "name": "SSH",
                          "properties": {
                            "description": "Allows SSH traffic",
                            "protocol": "Tcp",
                            "sourcePortRange": "192.168.1.0/24",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                          }
                        }
                      ]
                }
            
        },
        {            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "apiVersion": "2017-06-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName1'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName2'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName3'))]"
            ],
            "comments": "This will build a Virtual Network.",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "192.168.0.0/16"
                    ]
                },
                "subnets": [
                    { "name": "[variables('subnet1Name')]",
                        "properties": {
                            "addressPrefix": "192.168.1.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName1'))]"
                            }
                          }
                    },
                    {   "name": "[variables('subnet2Name')]",
                        "properties": {
                            "addressPrefix": "192.168.2.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName2'))]"
                            }
                        }
                    },
                    {  "name": "[variables('subnet3Name')]",
                        "properties": {
                            "addressPrefix": "192.168.3.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName3'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                          "addressPrefix": "192.168.4.0/24"
                        }
                      }
                ]
             }
        },
        {            "name": "[variables('nic1')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2017-06-01",
            "location": "[parameters('location')]",
            "comments": "This will be your Primary NIC",
            "dependsOn": [
                "[variables('publicIpAddress')]",
                "[variables('networkSecurityGroupName1')]",
                "[variables('virtualNetworkName')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnet1Ref')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('publicIpAddress'))]"
                            }
                        }
                    }
                ]
            }
        },
        {            "name": "[variables('nic2')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2017-06-01",
            "location": "[parameters('location')]",
            "comments": "This will be your NIC for ad subnet",
            "dependsOn": [
                "[variables('networkSecurityGroupName2')]",
                "[variables('virtualNetworkName')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnet2Ref')]"
                            },
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ]
            }
        },
        {            "name": "[variables('nic3')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2017-06-01",
            "location": "[parameters('location')]",
            "comments": "This will be your Secondary NIC",
            "dependsOn": [
                "[variables('networkSecurityGroupName3')]",
                "[variables('virtualNetworkName')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnet3Ref')]"
                            },
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ]
            }
        },
        {            "name": "[variables('publicIpAddress')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2017-06-01",
            "location": "[parameters('location')]",
            "comments": "Public IP for your Primary NIC",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            }
        },
        {"type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-04-01",
            
            "name": "[variables('publicIPAddressName')]",
            "location": "[parameters('location')]",
            "sku": {
              "name": "Standard"
            },
            "properties": {
              "publicIPAllocationMethod": "Static"
            }
          },
          { "type": "Microsoft.Network/applicationGateways",
            "apiVersion": "2019-04-01",
            "name": "[variables('applicationGatewayName')]",
           
            "location": "[parameters('location')]",
            "dependsOn": [
              "[variables('virtualNetworkName')]",
              "[variables('publicIPAddressName')]"
            ],
            "properties": {
              "sku": {
                "name": "[parameters('applicationGatewaySize')]",
                "tier": "WAF_v2",
                "capacity": "[parameters('applicationGateWayCapacity')]"
              },
              "gatewayIPConfigurations": [
                {
                  "name": "appGatewayIpConfig",
                  "properties": {
                    "subnet": {
                      "id": "[variables('subnetRef')]"
                    }
                  }
                }
              ],
              "frontendIPConfigurations": [
                {
                  "name": "appGatewayFrontendIP",
                  "properties": {
                    "PublicIPAddress": {
                      "id": "[variables('publicIPRef')]"
                    }
                  }
                }
              ],
              "frontendPorts": [
                {
                  "name": "appGatewayFrontendPort",
                  "properties": {
                    "Port": 80
                  }
                }
              ],
              "backendAddressPools": [
                {
                  "name": "appGatewayBackendPool",
                  "properties": {
                    "BackendAddresses": [
                      {
                        "IpAddress": "[parameters('backendIpAddress1')]"
                      },
                      {
                        "IpAddress": "[parameters('backendIpAddress2')]"
                      }
                    ]
                  }
                }
              ],
              "backendHttpSettingsCollection": [
                {
                  "name": "appGatewayBackendHttpSettings",
                  "properties": {
                    "Port": 80,
                    "Protocol": "Http",
                    "CookieBasedAffinity": "Disabled"
                  }
                }
              ],
              "httpListeners": [
                {
                  "name": "appGatewayHttpListener",
                  "properties": {
                    "FrontendIPConfiguration": {
                      "Id": "[concat(variables('applicationGatewayID'), '/frontendIPConfigurations/appGatewayFrontendIP')]"
                    },
                    "FrontendPort": {
                      "Id": "[concat(variables('applicationGatewayID'), '/frontendPorts/appGatewayFrontendPort')]"
                    },
                    "Protocol": "Http",
                    "SslCertificate": null
                  }
                }
              ],
              "requestRoutingRules": [
                {
                  "Name": "rule1",
                  "properties": {
                    "RuleType": "Basic",
                    "httpListener": {
                      "id": "[concat(variables('applicationGatewayID'), '/httpListeners/appGatewayHttpListener')]"
                    },
                    "backendAddressPool": {
                      "id": "https://rswebappportal.azurewebsites.net"
                    },
                    "backendHttpSettings": {
                      "id": "[concat(variables('applicationGatewayID'), '/backendHttpSettingsCollection/appGatewayBackendHttpSettings')]"
                    }
                  }
                }
              ],
              "webApplicationFirewallConfiguration": {
                "enabled": "[parameters('wafEnabled')]",
                "firewallMode": "[parameters('wafMode')]",
                "ruleSetType": "[parameters('wafRuleSetType')]",
                "ruleSetVersion": "[parameters('wafRuleSetVersion')]",
                "disabledRuleGroups": []
              }
            }
          }

        ,
        {
            "apiVersion": "2017-08-01",
            "type": "Microsoft.Web/serverfarms",
            "kind": "app",
            "name": "[variables('appServicePlanName')]",
            "location": "[parameters('location')]",
            "comments": "This app service plan is used for the web app and slots.",
            "tags": {
                "displayName": "AppServicePlan"
            },
            "properties": {},
            "dependsOn": [],
            "sku": {
                "name": "[if(lessOrEquals(length(parameters('environments')), variables('standardPlanMaxAdditionalSlots')), 'S1', 'P1')]"
            }
        },
        {
            "apiVersion": "2016-08-01",
            "type": "Microsoft.Web/sites",
            "kind": "app",
            "name": "[variables('webAppPortalName')]",
            "location": "[parameters('location')]",
            "comments": "This is the web app, also the default 'nameless' slot.",
            "tags": {
                "displayName": "WebApp"
            },
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
            ]
        },
        {
            "apiVersion": "2016-08-01",
            "type": "Microsoft.Web/sites/slots",
            "name": "[concat(variables('webAppPortalName'), '/', parameters('environments')[copyIndex()])]",
            "kind": "app",
            "location": "[parameters('location')]",
            "comments": "This specifies the web app slots.",
            "tags": {
                "displayName": "WebAppSlots"
            },
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/Sites', variables('webAppPortalName'))]"
            ],
            "copy": {
                "name": "webPortalSlot",
                "count": "[length(parameters('environments'))]"
            }
        }
    ],
    "outputs": {}
}

